    Adding custom icons to the checkbox tree  In order to add custom icon to the Dijit Tree with Checkboxes the following  items are required:  1 - An image sprite containing at least three 16x16 icons:        (0) - Terminal      (1) - Collapsed      (2) - Expanded        2 - A css file defining the icon class. If you want to create multiple custom      icons it is recommended to create a 'master' css file which imports the      individual css files. As an example: /cbtree/icons/cbtreeIcons.css is the      default master css file.        3 - A link in your HTML file to the master css file, that is, you are using      multiple icon classes otherwise a link to your dedicated css file. For      example:        <link rel="stylesheet" href="../cbtree/icons/cbtreeIcons.css" />                                      OR      <link rel="stylesheet" href="../cbtree/icons/myIcons.css" />      Alternatively you could import your css file in one of the theme related      css file used by cbtree. For example: claro.css, tundra.css or ... in one      of the themes related directories.    The CSS file content.      Assuming you are creating the css file for the css class name 'myIcons' then   the basic (minimal) css file MUST look like:    .myIcons {      background-image: url('images/myIcons.gif');      background-repeat: no-repeat;      width: 16px;      height: 16px;      margin: 0;      padding: 0;    }    .myIconsTerminal {      background-position: -0px;    }    .myIconsCollapsed {      background-position: -16px;    }    .myIconsExpanded {      background-position: -32px;    }    Creating the Checkbox Tree.      In order to use your icons, the customIcons propertie of the tree must be  set accordingly:    customIconClass: { cssClass: "myIcons", indent: false },    Example:                          ...      <link rel="stylesheet" href="../cbtree/icons/myIcons.css" />                        ...      <script>        require(["dojo/data/ItemFileWriteStore", "cbtree"],           function( ItemFileWriteStore, cbtree ) {            var store = new ItemFileWriteStore( { url: "myFamilyTree.json" });            var model = new cbtree.StoreModel( {                    store: store,                    query: {type: 'parent'},                    rootLabel: 'The Family',                        ...                    });             var tree = new cbtree.Tree( {                    model: model,                    id: "MenuTree",                    customIcons: { cssClass: "myIcons", indent: false },                        ...                    });      </script>    Multi Level Icons.      In addition to the basic configuration described above the Dijit Tree with  Checkboxes also allows for the use of different icons depending on the tree  indent level. Whenever the customIcons property 'indent' is true the cbtree  adds an additional ccs class for each icon which is the iconClass suffixed  with the current indent level. For example: assuming your icon class is still  'myIcons' and an expanded icon is located at indent level 1 the following css  classes are set for the iconNode:      1 - myIconsExpanded    2 - myIconsExpanded_1      Add at least one more icon to your sprite (e.g icon (3)) and add the following  to your css file.        .myIconsTerminal_1,    .myIconsCollapsed_1,    .myIconsExpanded_1 {      background-position: -48px;    }  Now create the tree with the customIcons property 'ident' set to true:        var tree = new cbtree.Tree( {              model: model,              id: "MenuTree",              customIcons: { cssClass: "myIcons", indent: true },                  ...              });                ----/ END /----